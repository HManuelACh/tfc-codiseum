spring.application.name=codiseum

# PostgreSQL settings
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASS}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update

# Para Spring Boot 3.x+ usa esta (recomendado):
spring.sql.init.mode=always

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.sql.init.encoding=UTF-8

# FRONTEND
frontend.url=${FRONTEND_URL}

# JWT SECRET
jwt.secret=${JWT_SECRET}

# JWT EXPIRATION
jwt.expiration=${JWT_EXPIRATION}

# Carpeta de im√°genes
spring.web.resources.static-locations=file:/app/uploads/

# Opcional para debug si no corre data.sql
logging.level.org.springframework.jdbc.datasource.init=DEBUG

# Google OAuth2 settings
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid, profile, email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub